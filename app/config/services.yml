services:

    markdown:
        class: AppBundle\Utils\Markdown

    # Twig extensions that create new filters and functions for our views
    app.twig.app_extension:
        public:    false
        class:     AppBundle\Twig\Extensions
        arguments: ['@markdown', '%app_locales%']
        tags:
            - { name: twig.extension }

    app.twig.intl_extension:
        public: false
        class:  Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    # a route listener, that injects the locale through a URL directory
    app.redirect_to_preferred_locale_listener:
        class: AppBundle\EventListener\RedirectToPreferredLocaleListener
        arguments: ['@router', '%app_locales%', '%locale%']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # security voter to check user-profile access
    app.voter.user:
        class: AppBundle\Voter\UserVoter
        arguments: ["@security.access.decision_manager"]
        tags:
            - { name: security.voter }

    # form to edit user roles
    app.admin.user_profile_roles:
        class: AppBundle\Form\UserRolesType
        arguments: ["%security.role_hierarchy.roles%"]
        tags:
            - { name: form.type }

    # event-listener to populate the navigation
    app.menu_builder:
        class: AppBundle\EventListener\MenuBuilder
        arguments: ["@event_dispatcher", "@security.authorization_checker"]
        tags:
            - { name: kernel.event_listener, event: theme.sidebar_setup_menu, method: onSetupNavbar }

    # service that prefixes every database table
    app.tableprefix_subscriber:
        class: AppBundle\Doctrine\TablePrefixSubscriber
        arguments: ["%database_prefix%"]
        tags:
            - { name: doctrine.event_subscriber }

    # additional menu entries for the timesheet bundle
    timesheet.configure_menu_listener:
        class: TimesheetBundle\EventListener\Menu
        tags:
          - { name: kernel.event_listener, event: app.main_menu_configure, method: onMainMenuConfigure }
          - { name: kernel.event_listener, event: app.admin_menu_configure, method: onAdminMenuConfigure }

    # Uncomment the following lines to define a service for the Post Doctrine repository.
    # It's not mandatory to create these services, but if you use repositories a lot,
    # these services simplify your code:
    #
    # app.post_repository:
    #     class:     Doctrine\ORM\EntityRepository
    #     factory:   ['@doctrine.orm.entity_manager', getRepository]
    #     arguments: [AppBundle\Entity\Post]
    #
    # // traditional code inside a controller
    # $entityManager = $this->getDoctrine()->getManager();
    # $posts = $entityManager->getRepository('AppBundle:Post')->findAll();
    #
    # // same code using repository services
    # $posts = $this->get('app.post_repository')->findAll();

    avanzu_admin_theme.navbar_user_listener:
        class: AppBundle\EventListener\NavbarShowUserListener
        arguments: ["@security.token_storage"]
        tags:
          - { name: kernel.event_listener, event: theme.navbar_user, method: onShowUser }
          - { name: kernel.event_listener, event: theme.sidebar_user, method: onShowUser }

#    avanzu_admin_theme.navbar_task_listener:
#        class: "%avanzu_admin_theme.navbar_task_listener.class%"
#        tags:
#          - { name: kernel.event_listener, event: theme.tasks, method: onListTasks }
#
#    avanzu_admin_theme.navbar_notify_listener:
#        class: "%avanzu_admin_theme.navbar_notify_listener.class%"
#        tags:
#          - { name: kernel.event_listener, event: theme.notifications, method: onListNotifications }
#
#    avanzu_admin_theme.navbar_msg_listener:
#        class: "%avanzu_admin_theme.navbar_msg_listener.class%"
#        tags:
#          - { name: kernel.event_listener, event: theme.messages, method: onListMessages }
#
#    avanzu_admin_theme.setup_menu_listener:
#        class: "%avanzu_admin_theme.setup_menu_listener.class%"
#        tags:
#          - { name: kernel.event_listener, event: theme.sidebar_setup_menu, method: onSetupMenu }
#          - { name: kernel.event_listener, event: theme.breadcrumb, method: onSetupMenu }
